{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Server for Moscow hackathon game project.",
        "title": "MosHackGame API",
        "contact": {
            "name": "API Support",
            "email": "iamvkosarev@gmail.com"
        },
        "version": "1.0"
    },
    "host": "45.93.201.7",
    "basePath": "/api",
    "paths": {
        "/game/balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns balance of the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get current user balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetUserBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/game/line/hint": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "line-game"
                ],
                "summary": "Get current user level's hint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetLevelHintResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/game/line/level": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "line-game"
                ],
                "summary": "Get current user level",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetUserLevelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "line-game"
                ],
                "summary": "Complete current user level",
                "parameters": [
                    {
                        "description": "Complete level data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CompleteLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CompleteLevelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/game/quiz": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Get quiz",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetQuizResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Update quiz",
                "parameters": [
                    {
                        "description": "Update quiz data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateQuizRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Add quiz",
                "parameters": [
                    {
                        "description": "Add quiz data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AddQuizRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/game/quiz/answer": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz"
                ],
                "summary": "Complete current user quiz",
                "parameters": [
                    {
                        "description": "Complete quiz data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AnswerQuizRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AnswerQuizResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns info of the user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get current user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetUserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/register/email": {
            "post": {
                "description": "Registers a new user by email and password.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register by email and password",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/token/anonymous": {
            "get": {
                "description": "Creates a new anonymous user and returns an auth token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get anonymous user token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterAnonymousResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/token/email": {
            "post": {
                "description": "Authenticates a registered user and returns an auth token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Authenticate by email and password",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AuthenticateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthenticateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http_errors.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AddQuizRequest": {
            "type": "object",
            "required": [
                "answers",
                "correct_answer",
                "info_link",
                "question"
            ],
            "properties": {
                "answer_description": {
                    "type": "string"
                },
                "answers": {
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                        "type": "string"
                    }
                },
                "correct_answer": {
                    "type": "integer"
                },
                "info_link": {
                    "type": "string"
                },
                "question": {
                    "type": "string",
                    "maxLength": 130
                }
            }
        },
        "handler.AnswerQuizRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "answer": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "handler.AnswerQuizResponse": {
            "type": "object",
            "properties": {
                "soft_currency": {
                    "type": "integer"
                }
            }
        },
        "handler.AuthenticateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.ru"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "TestTest123"
                }
            }
        },
        "handler.AuthenticateUserResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.Cell": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "handler.CompleteLevelRequest": {
            "type": "object",
            "required": [
                "answer",
                "time_since_start"
            ],
            "properties": {
                "answer": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "time_since_start": {
                    "type": "integer"
                }
            }
        },
        "handler.CompleteLevelResponse": {
            "type": "object",
            "properties": {
                "soft_currency": {
                    "type": "integer"
                }
            }
        },
        "handler.GetLevelHintResponse": {
            "type": "object",
            "required": [
                "answer"
            ],
            "properties": {
                "answer": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "handler.GetQuizResponse": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "answer_description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info_link": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "handler.GetUserBalanceResponse": {
            "type": "object",
            "properties": {
                "soft_currency": {
                    "type": "integer"
                }
            }
        },
        "handler.GetUserInfoResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "handler.GetUserLevelResponse": {
            "type": "object",
            "properties": {
                "blockers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.Cell"
                    }
                },
                "end_cell": {
                    "$ref": "#/definitions/handler.Cell"
                },
                "field_size": {
                    "type": "integer"
                },
                "order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.Cell"
                    }
                },
                "start_cell": {
                    "$ref": "#/definitions/handler.Cell"
                }
            }
        },
        "handler.RegisterAnonymousResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.RegisterUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.ru"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "TestTest123"
                }
            }
        },
        "handler.UpdateQuizRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "answer_description": {
                    "type": "string"
                },
                "answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "correct_answer": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "info_link": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "http_errors.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer \u003ctoken\u003e\" to authenticate. Example: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}